2023-07-10 19:19:46,883 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.10 (default, May 26 2023, 14:05:08) [GCC 9.4.0]
CUDA available: True
GPU 0,1,2: NVIDIA RTX A6000
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.7, V11.7.99
GCC: x86_64-linux-gnu-gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
PyTorch: 1.13.1+cu117
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1+cu117
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: GCC 9.4
MMCV CUDA Compiler: 11.7
MMDetection: 2.25.3+aac4634
------------------------------------------------------------

2023-07-10 19:19:47,687 - mmdet - INFO - Distributed training: True
2023-07-10 19:19:48,370 - mmdet - INFO - Config:
model = dict(
    type='HybridTaskCascade',
    pretrained=None,
    backbone=dict(
        type='CBSwinTransformer',
        embed_dim=128,
        depths=[2, 2, 18, 2],
        num_heads=[4, 8, 16, 32],
        window_size=7,
        mlp_ratio=4.0,
        qkv_bias=True,
        qk_scale=None,
        drop_rate=0.0,
        attn_drop_rate=0.0,
        drop_path_rate=0.3,
        ape=False,
        patch_norm=True,
        out_indices=(0, 1, 2, 3),
        use_checkpoint=False),
    neck=dict(
        type='CBFPN',
        in_channels=[128, 256, 512, 1024],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),
    roi_head=dict(
        type='HybridTaskCascadeRoIHead',
        interleaved=True,
        mask_info_flow=True,
        num_stages=3,
        stage_loss_weights=[1, 0.5, 0.25],
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=[
            dict(
                type='ConvFCBBoxHead',
                num_shared_convs=4,
                num_shared_fcs=1,
                in_channels=256,
                conv_out_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=1,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=True,
                reg_decoded_bbox=True,
                norm_cfg=dict(type='SyncBN', requires_grad=True),
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='GIoULoss', loss_weight=10.0)),
            dict(
                type='ConvFCBBoxHead',
                num_shared_convs=4,
                num_shared_fcs=1,
                in_channels=256,
                conv_out_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=1,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.05, 0.05, 0.1, 0.1]),
                reg_class_agnostic=True,
                reg_decoded_bbox=True,
                norm_cfg=dict(type='SyncBN', requires_grad=True),
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='GIoULoss', loss_weight=10.0)),
            dict(
                type='ConvFCBBoxHead',
                num_shared_convs=4,
                num_shared_fcs=1,
                in_channels=256,
                conv_out_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=1,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.033, 0.033, 0.067, 0.067]),
                reg_class_agnostic=True,
                reg_decoded_bbox=True,
                norm_cfg=dict(type='SyncBN', requires_grad=True),
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='GIoULoss', loss_weight=10.0))
        ],
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=[
            dict(
                type='HTCMaskHead',
                with_conv_res=False,
                num_convs=4,
                in_channels=256,
                conv_out_channels=256,
                num_classes=1,
                loss_mask=dict(
                    type='CrossEntropyLoss', use_mask=True, loss_weight=1.0)),
            dict(
                type='HTCMaskHead',
                num_convs=4,
                in_channels=256,
                conv_out_channels=256,
                num_classes=1,
                loss_mask=dict(
                    type='CrossEntropyLoss', use_mask=True, loss_weight=1.0)),
            dict(
                type='HTCMaskHead',
                num_convs=4,
                in_channels=256,
                conv_out_channels=256,
                num_classes=1,
                loss_mask=dict(
                    type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))
        ]),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=0,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=2000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=[
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.6,
                    neg_iou_thr=0.6,
                    min_pos_iou=0.6,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.7,
                    min_pos_iou=0.7,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False)
        ]),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.001,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
data_root = ''
metainfo = dict(classes=('blood_vessel', ), palette=[(220, 20, 60)])
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
albu_train_transforms = [
    dict(
        type='ShiftScaleRotate',
        shift_limit=0.0625,
        scale_limit=0.15,
        rotate_limit=15,
        p=0.4),
    dict(type='RandomRotate90', p=0.4)
]
img_size = 1600
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='Resize', img_scale=[(1600, 1600)], keep_ratio=True),
    dict(
        type='RandomFlip',
        direction=['horizontal', 'vertical'],
        flip_ratio=0.5),
    dict(
        type='AutoAugment',
        policies=[[{
            'type': 'Shear',
            'prob': 0.4,
            'level': 0
        }], [{
            'type': 'Translate',
            'prob': 0.4,
            'level': 5
        }],
                  [{
                      'type': 'ColorTransform',
                      'prob': 1.0,
                      'level': 6
                  }, {
                      'type': 'EqualizeTransform'
                  }]]),
    dict(
        type='Albu',
        transforms=[
            dict(
                type='ShiftScaleRotate',
                shift_limit=0.0625,
                scale_limit=0.15,
                rotate_limit=15,
                p=0.4)
        ],
        bbox_params=dict(
            type='BboxParams',
            format='pascal_voc',
            label_fields=['gt_labels'],
            min_visibility=0.0,
            filter_lost_elements=True),
        keymap=dict(img='image', gt_bboxes='bboxes', gt_masks='masks'),
        update_pad_shape=False,
        skip_img_without_anno=True),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=[(1600, 1600)],
        flip=True,
        flip_direction=['horizontal', 'vertical'],
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=6,
    pin_memory=True,
    drop_last=False,
    train=dict(
        type='CocoDataset',
        classes=('blood_vessels', ),
        ann_file='/home/nischay/hubmap/coco/ds2_coco_1024_train_fold1.json',
        img_prefix='/home/nischay/hubmap/Data/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='Resize', img_scale=[(1600, 1600)], keep_ratio=True),
            dict(
                type='RandomFlip',
                direction=['horizontal', 'vertical'],
                flip_ratio=0.5),
            dict(
                type='AutoAugment',
                policies=[[{
                    'type': 'Shear',
                    'prob': 0.4,
                    'level': 0
                }], [{
                    'type': 'Translate',
                    'prob': 0.4,
                    'level': 5
                }],
                          [{
                              'type': 'ColorTransform',
                              'prob': 1.0,
                              'level': 6
                          }, {
                              'type': 'EqualizeTransform'
                          }]]),
            dict(
                type='Albu',
                transforms=[
                    dict(
                        type='ShiftScaleRotate',
                        shift_limit=0.0625,
                        scale_limit=0.15,
                        rotate_limit=15,
                        p=0.4)
                ],
                bbox_params=dict(
                    type='BboxParams',
                    format='pascal_voc',
                    label_fields=['gt_labels'],
                    min_visibility=0.0,
                    filter_lost_elements=True),
                keymap=dict(img='image', gt_bboxes='bboxes', gt_masks='masks'),
                update_pad_shape=False,
                skip_img_without_anno=True),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ]),
    val=dict(
        type='CocoDataset',
        classes=('blood_vessels', ),
        ann_file='/home/nischay/hubmap/coco/ds1_coco_1024_valid_all_fold1.json',
        img_prefix='/home/nischay/hubmap/Data/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[(1600, 1600)],
                flip=True,
                flip_direction=['horizontal', 'vertical'],
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        classes=('blood_vessels', ),
        ann_file=
        '/home/nischay/hubmap/coco/ds12_coco_1024_valid_all_fold1.json',
        img_prefix='/home/nischay/hubmap/Data/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[(1600, 1600)],
                flip=True,
                flip_direction=['horizontal', 'vertical'],
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
optimizer = dict(type='SGD', lr=0.025, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    by_epoch=False,
    warmup='linear',
    warmup_iters=250,
    warmup_ratio=0.001,
    min_lr=0.015)
evaluation = dict(interval=1, metric=['segm'], save_best='segm_mAP')
runner = dict(type='EpochBasedRunner', max_epochs=10)
checkpoint_config = dict(interval=-1, filename_tmpl='detectors_epoch_{}.pth')
log_config = dict(interval=20, hooks=[dict(type='TextLoggerHook')])
fp16 = dict(loss_scale=dict(init_scale=512))
gpu_ids = range(0, 3)
seed = 69
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/nischay/hubmap/try_mm/cbnet_pret/htc_cbv2_swin_base22k_patch4_window7_mstrain_400-1400_giou_4conv1f_adamw_20e_coco.pth'
work_dir = './work_dirs/hubmap/pretexp1_cbnetbase_1600_10e'
workflow = [('train', 1)]
auto_resume = False
resume_from = None
launcher = 'none'

2023-07-10 19:19:48,370 - mmdet - INFO - Set random seed to 69, deterministic: False
2023-07-10 19:19:52,374 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-07-10 19:19:52,414 - mmdet - INFO - load checkpoint from local path: /home/nischay/hubmap/try_mm/cbnet_pret/htc_cbv2_swin_base22k_patch4_window7_mstrain_400-1400_giou_4conv1f_adamw_20e_coco.pth
2023-07-10 19:19:52,875 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.0.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.0.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.1.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.1.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.2.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.2.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.mask_head.0.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 256, 1, 1]).
size mismatch for roi_head.mask_head.0.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for roi_head.mask_head.1.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 256, 1, 1]).
size mismatch for roi_head.mask_head.1.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for roi_head.mask_head.2.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 256, 1, 1]).
size mismatch for roi_head.mask_head.2.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
unexpected key in source state_dict: roi_head.semantic_head.lateral_convs.0.conv.weight, roi_head.semantic_head.lateral_convs.0.conv.bias, roi_head.semantic_head.lateral_convs.1.conv.weight, roi_head.semantic_head.lateral_convs.1.conv.bias, roi_head.semantic_head.lateral_convs.2.conv.weight, roi_head.semantic_head.lateral_convs.2.conv.bias, roi_head.semantic_head.lateral_convs.3.conv.weight, roi_head.semantic_head.lateral_convs.3.conv.bias, roi_head.semantic_head.lateral_convs.4.conv.weight, roi_head.semantic_head.lateral_convs.4.conv.bias, roi_head.semantic_head.convs.0.conv.weight, roi_head.semantic_head.convs.0.conv.bias, roi_head.semantic_head.convs.1.conv.weight, roi_head.semantic_head.convs.1.conv.bias, roi_head.semantic_head.convs.2.conv.weight, roi_head.semantic_head.convs.2.conv.bias, roi_head.semantic_head.convs.3.conv.weight, roi_head.semantic_head.convs.3.conv.bias, roi_head.semantic_head.conv_embedding.conv.weight, roi_head.semantic_head.conv_embedding.conv.bias, roi_head.semantic_head.conv_logits.weight, roi_head.semantic_head.conv_logits.bias

2023-07-10 19:19:52,916 - mmdet - INFO - Start running, host: root@mr-0xm20, work_dir: /home/nischay/hubmap/try_mm/mmdetection/cbnet/work_dirs/hubmap/pretexp1_cbnetbase_1600_10e
2023-07-10 19:19:52,916 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-07-10 19:19:52,916 - mmdet - INFO - workflow: [('train', 1)], max: 10 epochs
2023-07-10 19:19:52,919 - mmdet - INFO - Checkpoints will be saved to /home/nischay/hubmap/try_mm/mmdetection/cbnet/work_dirs/hubmap/pretexp1_cbnetbase_1600_10e by HardDiskBackend.
2023-07-10 19:20:31,151 - mmdet - INFO - Epoch [1][20/114]	lr: 1.923e-03, eta: 0:35:40, time: 1.911, data_time: 0.224, memory: 40212, loss_rpn_cls0_w0.5: 0.2405, loss_rpn_bbox0_w0.5: 0.0257, loss_rpn_cls1: 0.5086, loss_rpn_bbox1: 0.0512, s0.loss_cls0_w0.5: 0.2143, s0.acc0: 42.0256, s0.loss_bbox0_w0.5: 0.1031, s0.loss_mask0_w0.5: 0.3142, s1.loss_cls0_w0.5: 0.0828, s1.acc0: 45.5566, s1.loss_bbox0_w0.5: 0.0316, s1.loss_mask0_w0.5: 0.1398, s2.loss_cls0_w0.5: 0.0436, s2.acc0: 44.0601, s2.loss_bbox0_w0.5: 0.0078, s2.loss_mask0_w0.5: 0.0700, s0.loss_cls1: 0.4819, s0.acc1: 84.1569, s0.loss_bbox1: 0.2011, s0.loss_mask1: 0.6248, s1.loss_cls1: 0.1785, s1.acc1: 91.4067, s1.loss_bbox1: 0.0627, s1.loss_mask1: 0.2793, s2.loss_cls1: 0.0901, s2.acc1: 87.7708, s2.loss_bbox1: 0.0158, s2.loss_mask1: 0.1385, loss: 3.9059, grad_norm: 18.8925
2023-07-10 19:21:05,150 - mmdet - INFO - Epoch [1][40/114]	lr: 3.917e-03, eta: 0:33:06, time: 1.700, data_time: 0.065, memory: 40212, loss_rpn_cls0_w0.5: 0.0721, loss_rpn_bbox0_w0.5: 0.0248, loss_rpn_cls1: 0.1284, loss_rpn_bbox1: 0.0486, s0.loss_cls0_w0.5: 0.1391, s0.acc0: 45.1253, s0.loss_bbox0_w0.5: 0.1434, s0.loss_mask0_w0.5: 0.1998, s1.loss_cls0_w0.5: 0.0587, s1.acc0: 45.7707, s1.loss_bbox0_w0.5: 0.0489, s1.loss_mask0_w0.5: 0.0936, s2.loss_cls0_w0.5: 0.0268, s2.acc0: 46.8018, s2.loss_bbox0_w0.5: 0.0127, s2.loss_mask0_w0.5: 0.0445, s0.loss_cls1: 0.2773, s0.acc1: 90.3711, s0.loss_bbox1: 0.2764, s0.loss_mask1: 0.3951, s1.loss_cls1: 0.1191, s1.acc1: 91.4600, s1.loss_bbox1: 0.0991, s1.loss_mask1: 0.1863, s2.loss_cls1: 0.0558, s2.acc1: 93.1689, s2.loss_bbox1: 0.0271, s2.loss_mask1: 0.0869, loss: 2.5646, grad_norm: 6.9723
2023-07-10 19:21:39,670 - mmdet - INFO - Epoch [1][60/114]	lr: 5.903e-03, eta: 0:32:01, time: 1.726, data_time: 0.052, memory: 40691, loss_rpn_cls0_w0.5: 0.0427, loss_rpn_bbox0_w0.5: 0.0262, loss_rpn_cls1: 0.0752, loss_rpn_bbox1: 0.0511, s0.loss_cls0_w0.5: 0.1362, s0.acc0: 44.6151, s0.loss_bbox0_w0.5: 0.1911, s0.loss_mask0_w0.5: 0.1754, s1.loss_cls0_w0.5: 0.0646, s1.acc0: 44.7824, s1.loss_bbox0_w0.5: 0.0717, s1.loss_mask0_w0.5: 0.0807, s2.loss_cls0_w0.5: 0.0294, s2.acc0: 45.3872, s2.loss_bbox0_w0.5: 0.0211, s2.loss_mask0_w0.5: 0.0384, s0.loss_cls1: 0.2610, s0.acc1: 89.4482, s0.loss_bbox1: 0.3691, s0.loss_mask1: 0.3383, s1.loss_cls1: 0.1275, s1.acc1: 89.3871, s1.loss_bbox1: 0.1436, s1.loss_mask1: 0.1579, s2.loss_cls1: 0.0588, s2.acc1: 90.6684, s2.loss_bbox1: 0.0432, s2.loss_mask1: 0.0758, loss: 2.5788, grad_norm: 5.6847
2023-07-10 19:22:16,072 - mmdet - INFO - Epoch [1][80/114]	lr: 7.880e-03, eta: 0:31:36, time: 1.820, data_time: 0.092, memory: 40996, loss_rpn_cls0_w0.5: 0.0380, loss_rpn_bbox0_w0.5: 0.0360, loss_rpn_cls1: 0.0696, loss_rpn_bbox1: 0.0680, s0.loss_cls0_w0.5: 0.1346, s0.acc0: 44.1878, s0.loss_bbox0_w0.5: 0.2392, s0.loss_mask0_w0.5: 0.1645, s1.loss_cls0_w0.5: 0.0655, s1.acc0: 44.4087, s1.loss_bbox0_w0.5: 0.0985, s1.loss_mask0_w0.5: 0.0786, s2.loss_cls0_w0.5: 0.0320, s2.acc0: 44.1585, s2.loss_bbox0_w0.5: 0.0305, s2.loss_mask0_w0.5: 0.0375, s0.loss_cls1: 0.2644, s0.acc1: 88.7435, s0.loss_bbox1: 0.4622, s0.loss_mask1: 0.3223, s1.loss_cls1: 0.1302, s1.acc1: 88.9158, s1.loss_bbox1: 0.1941, s1.loss_mask1: 0.1542, s2.loss_cls1: 0.0638, s2.acc1: 88.1504, s2.loss_bbox1: 0.0617, s2.loss_mask1: 0.0739, loss: 2.8194, grad_norm: 5.3186
2023-07-10 19:22:51,761 - mmdet - INFO - Epoch [1][100/114]	lr: 9.842e-03, eta: 0:30:59, time: 1.784, data_time: 0.054, memory: 40996, loss_rpn_cls0_w0.5: 0.0382, loss_rpn_bbox0_w0.5: 0.0298, loss_rpn_cls1: 0.0682, loss_rpn_bbox1: 0.0558, s0.loss_cls0_w0.5: 0.1453, s0.acc0: 43.7956, s0.loss_bbox0_w0.5: 0.2640, s0.loss_mask0_w0.5: 0.1689, s1.loss_cls0_w0.5: 0.0710, s1.acc0: 43.8710, s1.loss_bbox0_w0.5: 0.1109, s1.loss_mask0_w0.5: 0.0803, s2.loss_cls0_w0.5: 0.0339, s2.acc0: 43.7110, s2.loss_bbox0_w0.5: 0.0322, s2.loss_mask0_w0.5: 0.0378, s0.loss_cls1: 0.2754, s0.acc1: 88.3724, s0.loss_bbox1: 0.5097, s0.loss_mask1: 0.3307, s1.loss_cls1: 0.1383, s1.acc1: 88.0617, s1.loss_bbox1: 0.2173, s1.loss_mask1: 0.1579, s2.loss_cls1: 0.0672, s2.acc1: 87.4558, s2.loss_bbox1: 0.0667, s2.loss_mask1: 0.0744, loss: 2.9739, grad_norm: 5.6233
2023-07-10 19:23:38,317 - mmdet - INFO - Evaluating segm...
2023-07-10 19:23:39,362 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.143
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.384
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.069
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.110
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.230
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.387
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.387
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.387
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.349
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.431
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.494

2023-07-10 19:23:41,702 - mmdet - INFO - Now best checkpoint is saved as best_segm_mAP_epoch_1.pth.
2023-07-10 19:23:41,702 - mmdet - INFO - Best segm_mAP is 0.1432 at 1 epoch.
2023-07-10 19:23:41,702 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:23:41,702 - mmdet - INFO - Epoch(val) [1][29]	segm_mAP: 0.1432, segm_mAP_50: 0.3842, segm_mAP_75: 0.0689, segm_mAP_s: 0.1098, segm_mAP_m: 0.2297, segm_mAP_l: 0.1890, segm_mAP_copypaste: 0.1432 0.3842 0.0689 0.1098 0.2297 0.1890
2023-07-10 19:24:19,969 - mmdet - INFO - Epoch [2][20/114]	lr: 1.313e-02, eta: 0:27:09, time: 1.913, data_time: 0.192, memory: 40996, loss_rpn_cls0_w0.5: 0.0338, loss_rpn_bbox0_w0.5: 0.0279, loss_rpn_cls1: 0.0572, loss_rpn_bbox1: 0.0511, s0.loss_cls0_w0.5: 0.1368, s0.acc0: 44.1309, s0.loss_bbox0_w0.5: 0.2460, s0.loss_mask0_w0.5: 0.1662, s1.loss_cls0_w0.5: 0.0680, s1.acc0: 44.1927, s1.loss_bbox0_w0.5: 0.1041, s1.loss_mask0_w0.5: 0.0804, s2.loss_cls0_w0.5: 0.0321, s2.acc0: 44.1381, s2.loss_bbox0_w0.5: 0.0313, s2.loss_mask0_w0.5: 0.0382, s0.loss_cls1: 0.2555, s0.acc1: 88.9258, s0.loss_bbox1: 0.4718, s0.loss_mask1: 0.3226, s1.loss_cls1: 0.1309, s1.acc1: 88.4594, s1.loss_bbox1: 0.2069, s1.loss_mask1: 0.1565, s2.loss_cls1: 0.0632, s2.acc1: 88.1140, s2.loss_bbox1: 0.0653, s2.loss_mask1: 0.0742, loss: 2.8199, grad_norm: 4.9303
2023-07-10 19:24:55,838 - mmdet - INFO - Epoch [2][40/114]	lr: 1.504e-02, eta: 0:26:59, time: 1.793, data_time: 0.046, memory: 40996, loss_rpn_cls0_w0.5: 0.0366, loss_rpn_bbox0_w0.5: 0.0268, loss_rpn_cls1: 0.0589, loss_rpn_bbox1: 0.0498, s0.loss_cls0_w0.5: 0.1431, s0.acc0: 43.9583, s0.loss_bbox0_w0.5: 0.2545, s0.loss_mask0_w0.5: 0.1667, s1.loss_cls0_w0.5: 0.0718, s1.acc0: 43.8510, s1.loss_bbox0_w0.5: 0.1098, s1.loss_mask0_w0.5: 0.0795, s2.loss_cls0_w0.5: 0.0333, s2.acc0: 43.9400, s2.loss_bbox0_w0.5: 0.0334, s2.loss_mask0_w0.5: 0.0373, s0.loss_cls1: 0.2719, s0.acc1: 88.6670, s0.loss_bbox1: 0.4903, s0.loss_mask1: 0.3256, s1.loss_cls1: 0.1383, s1.acc1: 88.1559, s1.loss_bbox1: 0.2181, s1.loss_mask1: 0.1561, s2.loss_cls1: 0.0667, s2.acc1: 87.3853, s2.loss_bbox1: 0.0688, s2.loss_mask1: 0.0733, loss: 2.9105, grad_norm: 5.0163
2023-07-10 19:25:31,390 - mmdet - INFO - Epoch [2][60/114]	lr: 1.692e-02, eta: 0:26:41, time: 1.778, data_time: 0.050, memory: 40996, loss_rpn_cls0_w0.5: 0.0345, loss_rpn_bbox0_w0.5: 0.0272, loss_rpn_cls1: 0.0554, loss_rpn_bbox1: 0.0502, s0.loss_cls0_w0.5: 0.1360, s0.acc0: 44.2041, s0.loss_bbox0_w0.5: 0.2439, s0.loss_mask0_w0.5: 0.1678, s1.loss_cls0_w0.5: 0.0676, s1.acc0: 44.1479, s1.loss_bbox0_w0.5: 0.1032, s1.loss_mask0_w0.5: 0.0815, s2.loss_cls0_w0.5: 0.0321, s2.acc0: 44.2490, s2.loss_bbox0_w0.5: 0.0311, s2.loss_mask0_w0.5: 0.0385, s0.loss_cls1: 0.2540, s0.acc1: 89.2155, s0.loss_bbox1: 0.4686, s0.loss_mask1: 0.3305, s1.loss_cls1: 0.1289, s1.acc1: 88.9000, s1.loss_bbox1: 0.2039, s1.loss_mask1: 0.1609, s2.loss_cls1: 0.0632, s2.acc1: 88.6202, s2.loss_bbox1: 0.0632, s2.loss_mask1: 0.0759, loss: 2.8179, grad_norm: 3.7209
2023-07-10 19:26:07,815 - mmdet - INFO - Epoch [2][80/114]	lr: 1.877e-02, eta: 0:26:24, time: 1.821, data_time: 0.062, memory: 40996, loss_rpn_cls0_w0.5: 0.0316, loss_rpn_bbox0_w0.5: 0.0291, loss_rpn_cls1: 0.0531, loss_rpn_bbox1: 0.0531, s0.loss_cls0_w0.5: 0.1425, s0.acc0: 43.8501, s0.loss_bbox0_w0.5: 0.2546, s0.loss_mask0_w0.5: 0.1599, s1.loss_cls0_w0.5: 0.0733, s1.acc0: 43.6586, s1.loss_bbox0_w0.5: 0.1135, s1.loss_mask0_w0.5: 0.0772, s2.loss_cls0_w0.5: 0.0354, s2.acc0: 43.3244, s2.loss_bbox0_w0.5: 0.0358, s2.loss_mask0_w0.5: 0.0364, s0.loss_cls1: 0.2692, s0.acc1: 88.6735, s0.loss_bbox1: 0.4908, s0.loss_mask1: 0.3110, s1.loss_cls1: 0.1383, s1.acc1: 88.0051, s1.loss_bbox1: 0.2212, s1.loss_mask1: 0.1512, s2.loss_cls1: 0.0694, s2.acc1: 86.9205, s2.loss_bbox1: 0.0722, s2.loss_mask1: 0.0715, loss: 2.8902, grad_norm: 3.6060
2023-07-10 19:26:43,638 - mmdet - INFO - Epoch [2][100/114]	lr: 2.059e-02, eta: 0:26:01, time: 1.791, data_time: 0.051, memory: 40996, loss_rpn_cls0_w0.5: 0.0340, loss_rpn_bbox0_w0.5: 0.0312, loss_rpn_cls1: 0.0554, loss_rpn_bbox1: 0.0587, s0.loss_cls0_w0.5: 0.1396, s0.acc0: 43.9950, s0.loss_bbox0_w0.5: 0.2652, s0.loss_mask0_w0.5: 0.1648, s1.loss_cls0_w0.5: 0.0690, s1.acc0: 44.1177, s1.loss_bbox0_w0.5: 0.1172, s1.loss_mask0_w0.5: 0.0793, s2.loss_cls0_w0.5: 0.0342, s2.acc0: 43.5997, s2.loss_bbox0_w0.5: 0.0361, s2.loss_mask0_w0.5: 0.0375, s0.loss_cls1: 0.2660, s0.acc1: 88.4587, s0.loss_bbox1: 0.5121, s0.loss_mask1: 0.3218, s1.loss_cls1: 0.1328, s1.acc1: 88.4542, s1.loss_bbox1: 0.2296, s1.loss_mask1: 0.1557, s2.loss_cls1: 0.0676, s2.acc1: 87.6731, s2.loss_bbox1: 0.0741, s2.loss_mask1: 0.0734, loss: 2.9550, grad_norm: 3.5745
2023-07-10 19:27:30,516 - mmdet - INFO - Evaluating segm...
2023-07-10 19:27:31,544 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.178
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.444
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.106
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.129
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.254
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.223
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.409
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.409
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.409
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.367
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.463
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.476

2023-07-10 19:27:31,674 - mmdet - INFO - The previous best checkpoint /home/nischay/hubmap/try_mm/mmdetection/cbnet/work_dirs/hubmap/pretexp1_cbnetbase_1600_10e/best_segm_mAP_epoch_1.pth was removed
2023-07-10 19:27:33,994 - mmdet - INFO - Now best checkpoint is saved as best_segm_mAP_epoch_2.pth.
2023-07-10 19:27:33,995 - mmdet - INFO - Best segm_mAP is 0.1779 at 2 epoch.
2023-07-10 19:27:33,995 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:27:33,995 - mmdet - INFO - Epoch(val) [2][29]	segm_mAP: 0.1779, segm_mAP_50: 0.4437, segm_mAP_75: 0.1057, segm_mAP_s: 0.1288, segm_mAP_m: 0.2535, segm_mAP_l: 0.2233, segm_mAP_copypaste: 0.1779 0.4437 0.1057 0.1288 0.2535 0.2233
2023-07-10 19:28:13,098 - mmdet - INFO - Epoch [3][20/114]	lr: 2.360e-02, eta: 0:23:58, time: 1.955, data_time: 0.197, memory: 40996, loss_rpn_cls0_w0.5: 0.0279, loss_rpn_bbox0_w0.5: 0.0278, loss_rpn_cls1: 0.0405, loss_rpn_bbox1: 0.0519, s0.loss_cls0_w0.5: 0.1340, s0.acc0: 44.1496, s0.loss_bbox0_w0.5: 0.2488, s0.loss_mask0_w0.5: 0.1616, s1.loss_cls0_w0.5: 0.0680, s1.acc0: 44.0016, s1.loss_bbox0_w0.5: 0.1108, s1.loss_mask0_w0.5: 0.0777, s2.loss_cls0_w0.5: 0.0335, s2.acc0: 43.6773, s2.loss_bbox0_w0.5: 0.0346, s2.loss_mask0_w0.5: 0.0363, s0.loss_cls1: 0.2511, s0.acc1: 89.1585, s0.loss_bbox1: 0.4812, s0.loss_mask1: 0.3160, s1.loss_cls1: 0.1297, s1.acc1: 88.5036, s1.loss_bbox1: 0.2165, s1.loss_mask1: 0.1524, s2.loss_cls1: 0.0651, s2.acc1: 87.5518, s2.loss_bbox1: 0.0693, s2.loss_mask1: 0.0708, loss: 2.8055, grad_norm: 3.2459
2023-07-10 19:28:49,448 - mmdet - INFO - Epoch [3][40/114]	lr: 2.371e-02, eta: 0:23:39, time: 1.817, data_time: 0.060, memory: 40996, loss_rpn_cls0_w0.5: 0.0301, loss_rpn_bbox0_w0.5: 0.0290, loss_rpn_cls1: 0.0529, loss_rpn_bbox1: 0.0547, s0.loss_cls0_w0.5: 0.1322, s0.acc0: 44.2594, s0.loss_bbox0_w0.5: 0.2487, s0.loss_mask0_w0.5: 0.1590, s1.loss_cls0_w0.5: 0.0671, s1.acc0: 44.0467, s1.loss_bbox0_w0.5: 0.1081, s1.loss_mask0_w0.5: 0.0769, s2.loss_cls0_w0.5: 0.0323, s2.acc0: 44.0284, s2.loss_bbox0_w0.5: 0.0337, s2.loss_mask0_w0.5: 0.0364, s0.loss_cls1: 0.2522, s0.acc1: 89.0723, s0.loss_bbox1: 0.4791, s0.loss_mask1: 0.3103, s1.loss_cls1: 0.1297, s1.acc1: 88.4290, s1.loss_bbox1: 0.2134, s1.loss_mask1: 0.1498, s2.loss_cls1: 0.0630, s2.acc1: 88.5289, s2.loss_bbox1: 0.0683, s2.loss_mask1: 0.0711, loss: 2.7981, grad_norm: 3.2131
2023-07-10 19:29:25,378 - mmdet - INFO - Epoch [3][60/114]	lr: 2.352e-02, eta: 0:23:16, time: 1.796, data_time: 0.046, memory: 40996, loss_rpn_cls0_w0.5: 0.0254, loss_rpn_bbox0_w0.5: 0.0259, loss_rpn_cls1: 0.0428, loss_rpn_bbox1: 0.0500, s0.loss_cls0_w0.5: 0.1331, s0.acc0: 44.3164, s0.loss_bbox0_w0.5: 0.2421, s0.loss_mask0_w0.5: 0.1579, s1.loss_cls0_w0.5: 0.0682, s1.acc0: 44.1972, s1.loss_bbox0_w0.5: 0.1079, s1.loss_mask0_w0.5: 0.0770, s2.loss_cls0_w0.5: 0.0328, s2.acc0: 44.0953, s2.loss_bbox0_w0.5: 0.0340, s2.loss_mask0_w0.5: 0.0362, s0.loss_cls1: 0.2503, s0.acc1: 89.3913, s0.loss_bbox1: 0.4664, s0.loss_mask1: 0.3085, s1.loss_cls1: 0.1293, s1.acc1: 88.7837, s1.loss_bbox1: 0.2118, s1.loss_mask1: 0.1498, s2.loss_cls1: 0.0640, s2.acc1: 88.3601, s2.loss_bbox1: 0.0683, s2.loss_mask1: 0.0704, loss: 2.7521, grad_norm: 3.2306
2023-07-10 19:30:02,307 - mmdet - INFO - Epoch [3][80/114]	lr: 2.331e-02, eta: 0:22:55, time: 1.846, data_time: 0.057, memory: 40996, loss_rpn_cls0_w0.5: 0.0302, loss_rpn_bbox0_w0.5: 0.0276, loss_rpn_cls1: 0.0498, loss_rpn_bbox1: 0.0521, s0.loss_cls0_w0.5: 0.1374, s0.acc0: 44.0601, s0.loss_bbox0_w0.5: 0.2516, s0.loss_mask0_w0.5: 0.1581, s1.loss_cls0_w0.5: 0.0704, s1.acc0: 43.7472, s1.loss_bbox0_w0.5: 0.1138, s1.loss_mask0_w0.5: 0.0765, s2.loss_cls0_w0.5: 0.0348, s2.acc0: 43.6419, s2.loss_bbox0_w0.5: 0.0373, s2.loss_mask0_w0.5: 0.0360, s0.loss_cls1: 0.2589, s0.acc1: 88.5417, s0.loss_bbox1: 0.4816, s0.loss_mask1: 0.3063, s1.loss_cls1: 0.1365, s1.acc1: 87.9437, s1.loss_bbox1: 0.2232, s1.loss_mask1: 0.1478, s2.loss_cls1: 0.0682, s2.acc1: 87.1961, s2.loss_bbox1: 0.0743, s2.loss_mask1: 0.0692, loss: 2.8416, grad_norm: 3.2652
2023-07-10 19:30:38,763 - mmdet - INFO - Epoch [3][100/114]	lr: 2.310e-02, eta: 0:22:30, time: 1.823, data_time: 0.054, memory: 40996, loss_rpn_cls0_w0.5: 0.0238, loss_rpn_bbox0_w0.5: 0.0242, loss_rpn_cls1: 0.0413, loss_rpn_bbox1: 0.0451, s0.loss_cls0_w0.5: 0.1372, s0.acc0: 44.1390, s0.loss_bbox0_w0.5: 0.2515, s0.loss_mask0_w0.5: 0.1622, s1.loss_cls0_w0.5: 0.0688, s1.acc0: 44.0063, s1.loss_bbox0_w0.5: 0.1130, s1.loss_mask0_w0.5: 0.0786, s2.loss_cls0_w0.5: 0.0334, s2.acc0: 44.1147, s2.loss_bbox0_w0.5: 0.0370, s2.loss_mask0_w0.5: 0.0370, s0.loss_cls1: 0.2628, s0.acc1: 88.6751, s0.loss_bbox1: 0.4820, s0.loss_mask1: 0.3163, s1.loss_cls1: 0.1316, s1.acc1: 88.5861, s1.loss_bbox1: 0.2227, s1.loss_mask1: 0.1539, s2.loss_cls1: 0.0665, s2.acc1: 88.0565, s2.loss_bbox1: 0.0751, s2.loss_mask1: 0.0725, loss: 2.8365, grad_norm: 3.0415
2023-07-10 19:31:25,869 - mmdet - INFO - Evaluating segm...
2023-07-10 19:31:26,875 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.228
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.542
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.175
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.314
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.451
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.451
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.451
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.399
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.509
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.641

2023-07-10 19:31:27,005 - mmdet - INFO - The previous best checkpoint /home/nischay/hubmap/try_mm/mmdetection/cbnet/work_dirs/hubmap/pretexp1_cbnetbase_1600_10e/best_segm_mAP_epoch_2.pth was removed
2023-07-10 19:31:29,317 - mmdet - INFO - Now best checkpoint is saved as best_segm_mAP_epoch_3.pth.
2023-07-10 19:31:29,317 - mmdet - INFO - Best segm_mAP is 0.2283 at 3 epoch.
2023-07-10 19:31:29,317 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:31:29,317 - mmdet - INFO - Epoch(val) [3][29]	segm_mAP: 0.2283, segm_mAP_50: 0.5420, segm_mAP_75: 0.1504, segm_mAP_s: 0.1750, segm_mAP_m: 0.3139, segm_mAP_l: 0.4256, segm_mAP_copypaste: 0.2283 0.5420 0.1504 0.1750 0.3139 0.4256
2023-07-10 19:32:07,802 - mmdet - INFO - Epoch [4][20/114]	lr: 2.272e-02, eta: 0:20:55, time: 1.924, data_time: 0.187, memory: 41011, loss_rpn_cls0_w0.5: 0.0242, loss_rpn_bbox0_w0.5: 0.0237, loss_rpn_cls1: 0.0394, loss_rpn_bbox1: 0.0435, s0.loss_cls0_w0.5: 0.1330, s0.acc0: 44.3709, s0.loss_bbox0_w0.5: 0.2588, s0.loss_mask0_w0.5: 0.1616, s1.loss_cls0_w0.5: 0.0673, s1.acc0: 44.3122, s1.loss_bbox0_w0.5: 0.1151, s1.loss_mask0_w0.5: 0.0775, s2.loss_cls0_w0.5: 0.0329, s2.acc0: 44.1151, s2.loss_bbox0_w0.5: 0.0368, s2.loss_mask0_w0.5: 0.0367, s0.loss_cls1: 0.2559, s0.acc1: 89.1423, s0.loss_bbox1: 0.4985, s0.loss_mask1: 0.3131, s1.loss_cls1: 0.1295, s1.acc1: 89.0562, s1.loss_bbox1: 0.2280, s1.loss_mask1: 0.1515, s2.loss_cls1: 0.0653, s2.acc1: 88.3036, s2.loss_bbox1: 0.0747, s2.loss_mask1: 0.0721, loss: 2.8390, grad_norm: 2.8271
2023-07-10 19:32:43,805 - mmdet - INFO - Epoch [4][40/114]	lr: 2.249e-02, eta: 0:20:30, time: 1.800, data_time: 0.052, memory: 41011, loss_rpn_cls0_w0.5: 0.0187, loss_rpn_bbox0_w0.5: 0.0223, loss_rpn_cls1: 0.0326, loss_rpn_bbox1: 0.0419, s0.loss_cls0_w0.5: 0.1331, s0.acc0: 44.1170, s0.loss_bbox0_w0.5: 0.2473, s0.loss_mask0_w0.5: 0.1620, s1.loss_cls0_w0.5: 0.0683, s1.acc0: 43.7858, s1.loss_bbox0_w0.5: 0.1091, s1.loss_mask0_w0.5: 0.0782, s2.loss_cls0_w0.5: 0.0329, s2.acc0: 43.7892, s2.loss_bbox0_w0.5: 0.0338, s2.loss_mask0_w0.5: 0.0369, s0.loss_cls1: 0.2505, s0.acc1: 88.9323, s0.loss_bbox1: 0.4777, s0.loss_mask1: 0.3197, s1.loss_cls1: 0.1308, s1.acc1: 88.2544, s1.loss_bbox1: 0.2154, s1.loss_mask1: 0.1548, s2.loss_cls1: 0.0638, s2.acc1: 88.0677, s2.loss_bbox1: 0.0675, s2.loss_mask1: 0.0729, loss: 2.7702, grad_norm: 2.8042
2023-07-10 19:33:20,127 - mmdet - INFO - Epoch [4][60/114]	lr: 2.225e-02, eta: 0:20:04, time: 1.816, data_time: 0.055, memory: 41016, loss_rpn_cls0_w0.5: 0.0250, loss_rpn_bbox0_w0.5: 0.0259, loss_rpn_cls1: 0.0445, loss_rpn_bbox1: 0.0480, s0.loss_cls0_w0.5: 0.1451, s0.acc0: 43.5547, s0.loss_bbox0_w0.5: 0.2796, s0.loss_mask0_w0.5: 0.1588, s1.loss_cls0_w0.5: 0.0729, s1.acc0: 43.3548, s1.loss_bbox0_w0.5: 0.1217, s1.loss_mask0_w0.5: 0.0766, s2.loss_cls0_w0.5: 0.0358, s2.acc0: 43.4213, s2.loss_bbox0_w0.5: 0.0392, s2.loss_mask0_w0.5: 0.0364, s0.loss_cls1: 0.2755, s0.acc1: 87.7572, s0.loss_bbox1: 0.5405, s0.loss_mask1: 0.3073, s1.loss_cls1: 0.1414, s1.acc1: 87.0228, s1.loss_bbox1: 0.2390, s1.loss_mask1: 0.1492, s2.loss_cls1: 0.0706, s2.acc1: 86.7464, s2.loss_bbox1: 0.0791, s2.loss_mask1: 0.0709, loss: 2.9830, grad_norm: 2.8818
2023-07-10 19:33:56,549 - mmdet - INFO - Epoch [4][80/114]	lr: 2.200e-02, eta: 0:19:38, time: 1.821, data_time: 0.061, memory: 41054, loss_rpn_cls0_w0.5: 0.0221, loss_rpn_bbox0_w0.5: 0.0223, loss_rpn_cls1: 0.0388, loss_rpn_bbox1: 0.0422, s0.loss_cls0_w0.5: 0.1269, s0.acc0: 44.3115, s0.loss_bbox0_w0.5: 0.2544, s0.loss_mask0_w0.5: 0.1542, s1.loss_cls0_w0.5: 0.0638, s1.acc0: 44.3272, s1.loss_bbox0_w0.5: 0.1158, s1.loss_mask0_w0.5: 0.0753, s2.loss_cls0_w0.5: 0.0326, s2.acc0: 43.7864, s2.loss_bbox0_w0.5: 0.0397, s2.loss_mask0_w0.5: 0.0357, s0.loss_cls1: 0.2380, s0.acc1: 89.5638, s0.loss_bbox1: 0.4881, s0.loss_mask1: 0.2995, s1.loss_cls1: 0.1214, s1.acc1: 89.4327, s1.loss_bbox1: 0.2275, s1.loss_mask1: 0.1472, s2.loss_cls1: 0.0642, s2.acc1: 87.7307, s2.loss_bbox1: 0.0777, s2.loss_mask1: 0.0699, loss: 2.7574, grad_norm: 2.7506
2023-07-10 19:34:32,398 - mmdet - INFO - Epoch [4][100/114]	lr: 2.174e-02, eta: 0:19:10, time: 1.792, data_time: 0.041, memory: 41054, loss_rpn_cls0_w0.5: 0.0226, loss_rpn_bbox0_w0.5: 0.0224, loss_rpn_cls1: 0.0379, loss_rpn_bbox1: 0.0423, s0.loss_cls0_w0.5: 0.1310, s0.acc0: 44.3262, s0.loss_bbox0_w0.5: 0.2507, s0.loss_mask0_w0.5: 0.1566, s1.loss_cls0_w0.5: 0.0668, s1.acc0: 44.1925, s1.loss_bbox0_w0.5: 0.1118, s1.loss_mask0_w0.5: 0.0756, s2.loss_cls0_w0.5: 0.0336, s2.acc0: 43.5984, s2.loss_bbox0_w0.5: 0.0369, s2.loss_mask0_w0.5: 0.0356, s0.loss_cls1: 0.2513, s0.acc1: 89.3359, s0.loss_bbox1: 0.4872, s0.loss_mask1: 0.3066, s1.loss_cls1: 0.1297, s1.acc1: 88.8709, s1.loss_bbox1: 0.2220, s1.loss_mask1: 0.1483, s2.loss_cls1: 0.0659, s2.acc1: 87.5612, s2.loss_bbox1: 0.0742, s2.loss_mask1: 0.0701, loss: 2.7791, grad_norm: 2.6505
2023-07-10 19:35:19,621 - mmdet - INFO - Evaluating segm...
2023-07-10 19:35:20,648 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.151
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.403
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.067
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.118
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.210
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.261
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.396
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.396
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.396
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.361
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.518

2023-07-10 19:35:20,657 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:35:20,657 - mmdet - INFO - Epoch(val) [4][29]	segm_mAP: 0.1506, segm_mAP_50: 0.4028, segm_mAP_75: 0.0671, segm_mAP_s: 0.1176, segm_mAP_m: 0.2097, segm_mAP_l: 0.2608, segm_mAP_copypaste: 0.1506 0.4028 0.0671 0.1176 0.2097 0.2608
2023-07-10 19:35:59,072 - mmdet - INFO - Epoch [5][20/114]	lr: 2.129e-02, eta: 0:17:49, time: 1.920, data_time: 0.202, memory: 41054, loss_rpn_cls0_w0.5: 0.0196, loss_rpn_bbox0_w0.5: 0.0212, loss_rpn_cls1: 0.0340, loss_rpn_bbox1: 0.0390, s0.loss_cls0_w0.5: 0.1350, s0.acc0: 44.1927, s0.loss_bbox0_w0.5: 0.2504, s0.loss_mask0_w0.5: 0.1540, s1.loss_cls0_w0.5: 0.0701, s1.acc0: 43.7646, s1.loss_bbox0_w0.5: 0.1151, s1.loss_mask0_w0.5: 0.0747, s2.loss_cls0_w0.5: 0.0347, s2.acc0: 43.3612, s2.loss_bbox0_w0.5: 0.0374, s2.loss_mask0_w0.5: 0.0354, s0.loss_cls1: 0.2572, s0.acc1: 88.9225, s0.loss_bbox1: 0.4836, s0.loss_mask1: 0.3032, s1.loss_cls1: 0.1343, s1.acc1: 88.1189, s1.loss_bbox1: 0.2255, s1.loss_mask1: 0.1481, s2.loss_cls1: 0.0678, s2.acc1: 87.5401, s2.loss_bbox1: 0.0757, s2.loss_mask1: 0.0698, loss: 2.7857, grad_norm: 2.4805
2023-07-10 19:36:34,742 - mmdet - INFO - Epoch [5][40/114]	lr: 2.103e-02, eta: 0:17:22, time: 1.784, data_time: 0.053, memory: 41054, loss_rpn_cls0_w0.5: 0.0204, loss_rpn_bbox0_w0.5: 0.0203, loss_rpn_cls1: 0.0356, loss_rpn_bbox1: 0.0383, s0.loss_cls0_w0.5: 0.1250, s0.acc0: 44.6004, s0.loss_bbox0_w0.5: 0.2394, s0.loss_mask0_w0.5: 0.1547, s1.loss_cls0_w0.5: 0.0648, s1.acc0: 44.4350, s1.loss_bbox0_w0.5: 0.1095, s1.loss_mask0_w0.5: 0.0750, s2.loss_cls0_w0.5: 0.0326, s2.acc0: 44.0173, s2.loss_bbox0_w0.5: 0.0356, s2.loss_mask0_w0.5: 0.0355, s0.loss_cls1: 0.2386, s0.acc1: 89.7347, s0.loss_bbox1: 0.4648, s0.loss_mask1: 0.2997, s1.loss_cls1: 0.1257, s1.acc1: 89.1990, s1.loss_bbox1: 0.2167, s1.loss_mask1: 0.1467, s2.loss_cls1: 0.0640, s2.acc1: 88.3384, s2.loss_bbox1: 0.0730, s2.loss_mask1: 0.0698, loss: 2.6855, grad_norm: 2.5768
2023-07-10 19:37:10,517 - mmdet - INFO - Epoch [5][60/114]	lr: 2.075e-02, eta: 0:16:53, time: 1.789, data_time: 0.055, memory: 41054, loss_rpn_cls0_w0.5: 0.0221, loss_rpn_bbox0_w0.5: 0.0210, loss_rpn_cls1: 0.0362, loss_rpn_bbox1: 0.0381, s0.loss_cls0_w0.5: 0.1351, s0.acc0: 44.1398, s0.loss_bbox0_w0.5: 0.2602, s0.loss_mask0_w0.5: 0.1585, s1.loss_cls0_w0.5: 0.0682, s1.acc0: 43.9947, s1.loss_bbox0_w0.5: 0.1178, s1.loss_mask0_w0.5: 0.0765, s2.loss_cls0_w0.5: 0.0341, s2.acc0: 43.9106, s2.loss_bbox0_w0.5: 0.0391, s2.loss_mask0_w0.5: 0.0358, s0.loss_cls1: 0.2580, s0.acc1: 88.8509, s0.loss_bbox1: 0.5021, s0.loss_mask1: 0.3116, s1.loss_cls1: 0.1326, s1.acc1: 88.3817, s1.loss_bbox1: 0.2337, s1.loss_mask1: 0.1513, s2.loss_cls1: 0.0671, s2.acc1: 87.8172, s2.loss_bbox1: 0.0787, s2.loss_mask1: 0.0708, loss: 2.8486, grad_norm: 2.6716
2023-07-10 19:37:46,568 - mmdet - INFO - Epoch [5][80/114]	lr: 2.048e-02, eta: 0:16:25, time: 1.803, data_time: 0.058, memory: 41054, loss_rpn_cls0_w0.5: 0.0194, loss_rpn_bbox0_w0.5: 0.0203, loss_rpn_cls1: 0.0317, loss_rpn_bbox1: 0.0375, s0.loss_cls0_w0.5: 0.1266, s0.acc0: 44.4889, s0.loss_bbox0_w0.5: 0.2490, s0.loss_mask0_w0.5: 0.1532, s1.loss_cls0_w0.5: 0.0635, s1.acc0: 44.3978, s1.loss_bbox0_w0.5: 0.1126, s1.loss_mask0_w0.5: 0.0735, s2.loss_cls0_w0.5: 0.0321, s2.acc0: 44.1584, s2.loss_bbox0_w0.5: 0.0378, s2.loss_mask0_w0.5: 0.0348, s0.loss_cls1: 0.2411, s0.acc1: 89.4580, s0.loss_bbox1: 0.4792, s0.loss_mask1: 0.2996, s1.loss_cls1: 0.1229, s1.acc1: 89.2126, s1.loss_bbox1: 0.2228, s1.loss_mask1: 0.1456, s2.loss_cls1: 0.0626, s2.acc1: 88.3577, s2.loss_bbox1: 0.0763, s2.loss_mask1: 0.0690, loss: 2.7113, grad_norm: 2.5582
2023-07-10 19:38:22,301 - mmdet - INFO - Epoch [5][100/114]	lr: 2.021e-02, eta: 0:15:56, time: 1.787, data_time: 0.048, memory: 41054, loss_rpn_cls0_w0.5: 0.0170, loss_rpn_bbox0_w0.5: 0.0183, loss_rpn_cls1: 0.0270, loss_rpn_bbox1: 0.0333, s0.loss_cls0_w0.5: 0.1240, s0.acc0: 44.5150, s0.loss_bbox0_w0.5: 0.2449, s0.loss_mask0_w0.5: 0.1466, s1.loss_cls0_w0.5: 0.0618, s1.acc0: 44.5523, s1.loss_bbox0_w0.5: 0.1160, s1.loss_mask0_w0.5: 0.0719, s2.loss_cls0_w0.5: 0.0323, s2.acc0: 44.0122, s2.loss_bbox0_w0.5: 0.0395, s2.loss_mask0_w0.5: 0.0343, s0.loss_cls1: 0.2344, s0.acc1: 89.5882, s0.loss_bbox1: 0.4731, s0.loss_mask1: 0.2879, s1.loss_cls1: 0.1173, s1.acc1: 89.6996, s1.loss_bbox1: 0.2274, s1.loss_mask1: 0.1409, s2.loss_cls1: 0.0625, s2.acc1: 88.4084, s2.loss_bbox1: 0.0789, s2.loss_mask1: 0.0670, loss: 2.6563, grad_norm: 2.3479
2023-07-10 19:39:09,525 - mmdet - INFO - Evaluating segm...
2023-07-10 19:39:10,526 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.211
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.512
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.156
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.279
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.351
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.417
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.505
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.565

2023-07-10 19:39:10,535 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:39:10,535 - mmdet - INFO - Epoch(val) [5][29]	segm_mAP: 0.2108, segm_mAP_50: 0.5117, segm_mAP_75: 0.1412, segm_mAP_s: 0.1562, segm_mAP_m: 0.2788, segm_mAP_l: 0.3509, segm_mAP_copypaste: 0.2108 0.5117 0.1412 0.1562 0.2788 0.3509
2023-07-10 19:39:49,122 - mmdet - INFO - Epoch [6][20/114]	lr: 1.974e-02, eta: 0:14:44, time: 1.929, data_time: 0.200, memory: 41054, loss_rpn_cls0_w0.5: 0.0145, loss_rpn_bbox0_w0.5: 0.0195, loss_rpn_cls1: 0.0251, loss_rpn_bbox1: 0.0366, s0.loss_cls0_w0.5: 0.1285, s0.acc0: 44.2879, s0.loss_bbox0_w0.5: 0.2618, s0.loss_mask0_w0.5: 0.1539, s1.loss_cls0_w0.5: 0.0662, s1.acc0: 44.0128, s1.loss_bbox0_w0.5: 0.1199, s1.loss_mask0_w0.5: 0.0750, s2.loss_cls0_w0.5: 0.0334, s2.acc0: 43.6767, s2.loss_bbox0_w0.5: 0.0397, s2.loss_mask0_w0.5: 0.0354, s0.loss_cls1: 0.2446, s0.acc1: 89.4076, s0.loss_bbox1: 0.5079, s0.loss_mask1: 0.3015, s1.loss_cls1: 0.1274, s1.acc1: 88.7434, s1.loss_bbox1: 0.2370, s1.loss_mask1: 0.1474, s2.loss_cls1: 0.0661, s2.acc1: 87.2616, s2.loss_bbox1: 0.0794, s2.loss_mask1: 0.0695, loss: 2.7905, grad_norm: 2.5273
2023-07-10 19:40:24,787 - mmdet - INFO - Epoch [6][40/114]	lr: 1.946e-02, eta: 0:14:15, time: 1.783, data_time: 0.061, memory: 41054, loss_rpn_cls0_w0.5: 0.0192, loss_rpn_bbox0_w0.5: 0.0194, loss_rpn_cls1: 0.0322, loss_rpn_bbox1: 0.0350, s0.loss_cls0_w0.5: 0.1263, s0.acc0: 44.5256, s0.loss_bbox0_w0.5: 0.2407, s0.loss_mask0_w0.5: 0.1515, s1.loss_cls0_w0.5: 0.0637, s1.acc0: 44.3222, s1.loss_bbox0_w0.5: 0.1113, s1.loss_mask0_w0.5: 0.0734, s2.loss_cls0_w0.5: 0.0320, s2.acc0: 44.0633, s2.loss_bbox0_w0.5: 0.0381, s2.loss_mask0_w0.5: 0.0350, s0.loss_cls1: 0.2387, s0.acc1: 89.5687, s0.loss_bbox1: 0.4667, s0.loss_mask1: 0.2958, s1.loss_cls1: 0.1238, s1.acc1: 89.0465, s1.loss_bbox1: 0.2210, s1.loss_mask1: 0.1447, s2.loss_cls1: 0.0633, s2.acc1: 88.0454, s2.loss_bbox1: 0.0762, s2.loss_mask1: 0.0688, loss: 2.6769, grad_norm: 2.4672
2023-07-10 19:41:00,467 - mmdet - INFO - Epoch [6][60/114]	lr: 1.919e-02, eta: 0:13:45, time: 1.784, data_time: 0.056, memory: 41054, loss_rpn_cls0_w0.5: 0.0185, loss_rpn_bbox0_w0.5: 0.0180, loss_rpn_cls1: 0.0300, loss_rpn_bbox1: 0.0323, s0.loss_cls0_w0.5: 0.1223, s0.acc0: 44.7526, s0.loss_bbox0_w0.5: 0.2460, s0.loss_mask0_w0.5: 0.1510, s1.loss_cls0_w0.5: 0.0629, s1.acc0: 44.4049, s1.loss_bbox0_w0.5: 0.1132, s1.loss_mask0_w0.5: 0.0733, s2.loss_cls0_w0.5: 0.0315, s2.acc0: 44.1423, s2.loss_bbox0_w0.5: 0.0377, s2.loss_mask0_w0.5: 0.0350, s0.loss_cls1: 0.2378, s0.acc1: 90.0130, s0.loss_bbox1: 0.4768, s0.loss_mask1: 0.2968, s1.loss_cls1: 0.1235, s1.acc1: 89.3763, s1.loss_bbox1: 0.2233, s1.loss_mask1: 0.1451, s2.loss_cls1: 0.0628, s2.acc1: 88.4186, s2.loss_bbox1: 0.0752, s2.loss_mask1: 0.0699, loss: 2.6829, grad_norm: 2.6740
2023-07-10 19:41:36,344 - mmdet - INFO - Epoch [6][80/114]	lr: 1.892e-02, eta: 0:13:16, time: 1.794, data_time: 0.064, memory: 41054, loss_rpn_cls0_w0.5: 0.0182, loss_rpn_bbox0_w0.5: 0.0193, loss_rpn_cls1: 0.0311, loss_rpn_bbox1: 0.0344, s0.loss_cls0_w0.5: 0.1192, s0.acc0: 44.8478, s0.loss_bbox0_w0.5: 0.2337, s0.loss_mask0_w0.5: 0.1504, s1.loss_cls0_w0.5: 0.0605, s1.acc0: 44.6562, s1.loss_bbox0_w0.5: 0.1072, s1.loss_mask0_w0.5: 0.0728, s2.loss_cls0_w0.5: 0.0301, s2.acc0: 44.5532, s2.loss_bbox0_w0.5: 0.0362, s2.loss_mask0_w0.5: 0.0343, s0.loss_cls1: 0.2304, s0.acc1: 90.0147, s0.loss_bbox1: 0.4546, s0.loss_mask1: 0.2948, s1.loss_cls1: 0.1185, s1.acc1: 89.5944, s1.loss_bbox1: 0.2110, s1.loss_mask1: 0.1427, s2.loss_cls1: 0.0597, s2.acc1: 89.0159, s2.loss_bbox1: 0.0722, s2.loss_mask1: 0.0670, loss: 2.5983, grad_norm: 2.4678
2023-07-10 19:42:12,011 - mmdet - INFO - Epoch [6][100/114]	lr: 1.865e-02, eta: 0:12:45, time: 1.783, data_time: 0.062, memory: 41054, loss_rpn_cls0_w0.5: 0.0166, loss_rpn_bbox0_w0.5: 0.0201, loss_rpn_cls1: 0.0275, loss_rpn_bbox1: 0.0368, s0.loss_cls0_w0.5: 0.1310, s0.acc0: 44.2383, s0.loss_bbox0_w0.5: 0.2529, s0.loss_mask0_w0.5: 0.1493, s1.loss_cls0_w0.5: 0.0662, s1.acc0: 44.1238, s1.loss_bbox0_w0.5: 0.1174, s1.loss_mask0_w0.5: 0.0731, s2.loss_cls0_w0.5: 0.0336, s2.acc0: 43.7907, s2.loss_bbox0_w0.5: 0.0386, s2.loss_mask0_w0.5: 0.0346, s0.loss_cls1: 0.2442, s0.acc1: 89.4417, s0.loss_bbox1: 0.4881, s0.loss_mask1: 0.2923, s1.loss_cls1: 0.1260, s1.acc1: 89.0338, s1.loss_bbox1: 0.2301, s1.loss_mask1: 0.1442, s2.loss_cls1: 0.0654, s2.acc1: 88.0477, s2.loss_bbox1: 0.0768, s2.loss_mask1: 0.0681, loss: 2.7329, grad_norm: 2.5869
2023-07-10 19:42:59,177 - mmdet - INFO - Evaluating segm...
2023-07-10 19:43:00,179 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.222
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.526
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.161
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.308
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.425
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.452
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.452
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.452
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.403
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.510
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.582

2023-07-10 19:43:00,187 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:43:00,188 - mmdet - INFO - Epoch(val) [6][29]	segm_mAP: 0.2222, segm_mAP_50: 0.5260, segm_mAP_75: 0.1606, segm_mAP_s: 0.1487, segm_mAP_m: 0.3079, segm_mAP_l: 0.4254, segm_mAP_copypaste: 0.2222 0.5260 0.1606 0.1487 0.3079 0.4254
2023-07-10 19:43:39,620 - mmdet - INFO - Epoch [7][20/114]	lr: 1.821e-02, eta: 0:11:40, time: 1.971, data_time: 0.206, memory: 41054, loss_rpn_cls0_w0.5: 0.0152, loss_rpn_bbox0_w0.5: 0.0204, loss_rpn_cls1: 0.0270, loss_rpn_bbox1: 0.0363, s0.loss_cls0_w0.5: 0.1198, s0.acc0: 44.7559, s0.loss_bbox0_w0.5: 0.2487, s0.loss_mask0_w0.5: 0.1516, s1.loss_cls0_w0.5: 0.0603, s1.acc0: 44.6444, s1.loss_bbox0_w0.5: 0.1132, s1.loss_mask0_w0.5: 0.0731, s2.loss_cls0_w0.5: 0.0311, s2.acc0: 44.2119, s2.loss_bbox0_w0.5: 0.0377, s2.loss_mask0_w0.5: 0.0345, s0.loss_cls1: 0.2266, s0.acc1: 89.9268, s0.loss_bbox1: 0.4750, s0.loss_mask1: 0.2941, s1.loss_cls1: 0.1162, s1.acc1: 89.8476, s1.loss_bbox1: 0.2225, s1.loss_mask1: 0.1429, s2.loss_cls1: 0.0602, s2.acc1: 88.9591, s2.loss_bbox1: 0.0768, s2.loss_mask1: 0.0677, loss: 2.6512, grad_norm: 2.4537
2023-07-10 19:44:15,336 - mmdet - INFO - Epoch [7][40/114]	lr: 1.795e-02, eta: 0:11:10, time: 1.786, data_time: 0.054, memory: 41054, loss_rpn_cls0_w0.5: 0.0163, loss_rpn_bbox0_w0.5: 0.0196, loss_rpn_cls1: 0.0257, loss_rpn_bbox1: 0.0350, s0.loss_cls0_w0.5: 0.1261, s0.acc0: 44.4385, s0.loss_bbox0_w0.5: 0.2532, s0.loss_mask0_w0.5: 0.1525, s1.loss_cls0_w0.5: 0.0639, s1.acc0: 44.2518, s1.loss_bbox0_w0.5: 0.1151, s1.loss_mask0_w0.5: 0.0745, s2.loss_cls0_w0.5: 0.0326, s2.acc0: 43.6848, s2.loss_bbox0_w0.5: 0.0376, s2.loss_mask0_w0.5: 0.0350, s0.loss_cls1: 0.2332, s0.acc1: 89.6663, s0.loss_bbox1: 0.4866, s0.loss_mask1: 0.2990, s1.loss_cls1: 0.1216, s1.acc1: 89.1550, s1.loss_bbox1: 0.2276, s1.loss_mask1: 0.1466, s2.loss_cls1: 0.0633, s2.acc1: 87.9137, s2.loss_bbox1: 0.0763, s2.loss_mask1: 0.0689, loss: 2.7103, grad_norm: 2.6090
2023-07-10 19:44:51,104 - mmdet - INFO - Epoch [7][60/114]	lr: 1.771e-02, eta: 0:10:40, time: 1.788, data_time: 0.046, memory: 41054, loss_rpn_cls0_w0.5: 0.0148, loss_rpn_bbox0_w0.5: 0.0201, loss_rpn_cls1: 0.0253, loss_rpn_bbox1: 0.0368, s0.loss_cls0_w0.5: 0.1219, s0.acc0: 44.6566, s0.loss_bbox0_w0.5: 0.2537, s0.loss_mask0_w0.5: 0.1494, s1.loss_cls0_w0.5: 0.0628, s1.acc0: 44.4117, s1.loss_bbox0_w0.5: 0.1147, s1.loss_mask0_w0.5: 0.0728, s2.loss_cls0_w0.5: 0.0320, s2.acc0: 43.9759, s2.loss_bbox0_w0.5: 0.0365, s2.loss_mask0_w0.5: 0.0345, s0.loss_cls1: 0.2305, s0.acc1: 89.7966, s0.loss_bbox1: 0.4909, s0.loss_mask1: 0.2953, s1.loss_cls1: 0.1199, s1.acc1: 89.2671, s1.loss_bbox1: 0.2242, s1.loss_mask1: 0.1442, s2.loss_cls1: 0.0615, s2.acc1: 88.3653, s2.loss_bbox1: 0.0731, s2.loss_mask1: 0.0683, loss: 2.6831, grad_norm: 2.3950
2023-07-10 19:45:27,753 - mmdet - INFO - Epoch [7][80/114]	lr: 1.746e-02, eta: 0:10:09, time: 1.832, data_time: 0.068, memory: 41054, loss_rpn_cls0_w0.5: 0.0115, loss_rpn_bbox0_w0.5: 0.0176, loss_rpn_cls1: 0.0226, loss_rpn_bbox1: 0.0316, s0.loss_cls0_w0.5: 0.1247, s0.acc0: 44.5036, s0.loss_bbox0_w0.5: 0.2516, s0.loss_mask0_w0.5: 0.1502, s1.loss_cls0_w0.5: 0.0652, s1.acc0: 44.3403, s1.loss_bbox0_w0.5: 0.1158, s1.loss_mask0_w0.5: 0.0734, s2.loss_cls0_w0.5: 0.0334, s2.acc0: 43.6663, s2.loss_bbox0_w0.5: 0.0396, s2.loss_mask0_w0.5: 0.0352, s0.loss_cls1: 0.2365, s0.acc1: 89.7966, s0.loss_bbox1: 0.4858, s0.loss_mask1: 0.2923, s1.loss_cls1: 0.1249, s1.acc1: 89.0039, s1.loss_bbox1: 0.2268, s1.loss_mask1: 0.1433, s2.loss_cls1: 0.0649, s2.acc1: 87.6149, s2.loss_bbox1: 0.0793, s2.loss_mask1: 0.0692, loss: 2.6956, grad_norm: 2.3617
2023-07-10 19:46:03,264 - mmdet - INFO - Epoch [7][100/114]	lr: 1.723e-02, eta: 0:09:38, time: 1.776, data_time: 0.051, memory: 41054, loss_rpn_cls0_w0.5: 0.0140, loss_rpn_bbox0_w0.5: 0.0182, loss_rpn_cls1: 0.0230, loss_rpn_bbox1: 0.0323, s0.loss_cls0_w0.5: 0.1245, s0.acc0: 44.6061, s0.loss_bbox0_w0.5: 0.2495, s0.loss_mask0_w0.5: 0.1486, s1.loss_cls0_w0.5: 0.0629, s1.acc0: 44.5687, s1.loss_bbox0_w0.5: 0.1116, s1.loss_mask0_w0.5: 0.0720, s2.loss_cls0_w0.5: 0.0313, s2.acc0: 44.2583, s2.loss_bbox0_w0.5: 0.0366, s2.loss_mask0_w0.5: 0.0344, s0.loss_cls1: 0.2362, s0.acc1: 90.0488, s0.loss_bbox1: 0.4844, s0.loss_mask1: 0.2917, s1.loss_cls1: 0.1214, s1.acc1: 89.5804, s1.loss_bbox1: 0.2211, s1.loss_mask1: 0.1422, s2.loss_cls1: 0.0614, s2.acc1: 88.5535, s2.loss_bbox1: 0.0734, s2.loss_mask1: 0.0679, loss: 2.6587, grad_norm: 2.4669
2023-07-10 19:46:50,754 - mmdet - INFO - Evaluating segm...
2023-07-10 19:46:51,767 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.195
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.489
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.128
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.283
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.372
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.375
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.471
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.529

2023-07-10 19:46:51,776 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:46:51,776 - mmdet - INFO - Epoch(val) [7][29]	segm_mAP: 0.1951, segm_mAP_50: 0.4895, segm_mAP_75: 0.1266, segm_mAP_s: 0.1283, segm_mAP_m: 0.2825, segm_mAP_l: 0.3725, segm_mAP_copypaste: 0.1951 0.4895 0.1266 0.1283 0.2825 0.3725
2023-07-10 19:47:30,427 - mmdet - INFO - Epoch [8][20/114]	lr: 1.685e-02, eta: 0:08:37, time: 1.932, data_time: 0.201, memory: 41054, loss_rpn_cls0_w0.5: 0.0128, loss_rpn_bbox0_w0.5: 0.0179, loss_rpn_cls1: 0.0217, loss_rpn_bbox1: 0.0320, s0.loss_cls0_w0.5: 0.1182, s0.acc0: 44.8112, s0.loss_bbox0_w0.5: 0.2485, s0.loss_mask0_w0.5: 0.1504, s1.loss_cls0_w0.5: 0.0600, s1.acc0: 44.8384, s1.loss_bbox0_w0.5: 0.1149, s1.loss_mask0_w0.5: 0.0738, s2.loss_cls0_w0.5: 0.0310, s2.acc0: 44.2403, s2.loss_bbox0_w0.5: 0.0394, s2.loss_mask0_w0.5: 0.0352, s0.loss_cls1: 0.2245, s0.acc1: 90.3434, s0.loss_bbox1: 0.4822, s0.loss_mask1: 0.2967, s1.loss_cls1: 0.1146, s1.acc1: 90.1524, s1.loss_bbox1: 0.2274, s1.loss_mask1: 0.1461, s2.loss_cls1: 0.0597, s2.acc1: 89.0382, s2.loss_bbox1: 0.0797, s2.loss_mask1: 0.0692, loss: 2.6559, grad_norm: 2.5024
2023-07-10 19:48:06,321 - mmdet - INFO - Epoch [8][40/114]	lr: 1.664e-02, eta: 0:08:06, time: 1.795, data_time: 0.052, memory: 41054, loss_rpn_cls0_w0.5: 0.0146, loss_rpn_bbox0_w0.5: 0.0178, loss_rpn_cls1: 0.0249, loss_rpn_bbox1: 0.0320, s0.loss_cls0_w0.5: 0.1187, s0.acc0: 44.8527, s0.loss_bbox0_w0.5: 0.2456, s0.loss_mask0_w0.5: 0.1482, s1.loss_cls0_w0.5: 0.0600, s1.acc0: 44.5507, s1.loss_bbox0_w0.5: 0.1136, s1.loss_mask0_w0.5: 0.0725, s2.loss_cls0_w0.5: 0.0305, s2.acc0: 44.2454, s2.loss_bbox0_w0.5: 0.0389, s2.loss_mask0_w0.5: 0.0342, s0.loss_cls1: 0.2259, s0.acc1: 90.4167, s0.loss_bbox1: 0.4757, s0.loss_mask1: 0.2897, s1.loss_cls1: 0.1156, s1.acc1: 89.8300, s1.loss_bbox1: 0.2218, s1.loss_mask1: 0.1415, s2.loss_cls1: 0.0596, s2.acc1: 88.3626, s2.loss_bbox1: 0.0775, s2.loss_mask1: 0.0673, loss: 2.6262, grad_norm: 2.6295
2023-07-10 19:48:42,483 - mmdet - INFO - Epoch [8][60/114]	lr: 1.645e-02, eta: 0:07:35, time: 1.808, data_time: 0.064, memory: 41054, loss_rpn_cls0_w0.5: 0.0159, loss_rpn_bbox0_w0.5: 0.0196, loss_rpn_cls1: 0.0301, loss_rpn_bbox1: 0.0346, s0.loss_cls0_w0.5: 0.1308, s0.acc0: 44.3384, s0.loss_bbox0_w0.5: 0.2637, s0.loss_mask0_w0.5: 0.1481, s1.loss_cls0_w0.5: 0.0663, s1.acc0: 44.1370, s1.loss_bbox0_w0.5: 0.1218, s1.loss_mask0_w0.5: 0.0728, s2.loss_cls0_w0.5: 0.0334, s2.acc0: 43.7041, s2.loss_bbox0_w0.5: 0.0407, s2.loss_mask0_w0.5: 0.0346, s0.loss_cls1: 0.2511, s0.acc1: 89.1211, s0.loss_bbox1: 0.5081, s0.loss_mask1: 0.2896, s1.loss_cls1: 0.1286, s1.acc1: 88.5144, s1.loss_bbox1: 0.2397, s1.loss_mask1: 0.1428, s2.loss_cls1: 0.0662, s2.acc1: 87.2050, s2.loss_bbox1: 0.0810, s2.loss_mask1: 0.0684, loss: 2.7878, grad_norm: 2.4677
2023-07-10 19:49:18,836 - mmdet - INFO - Epoch [8][80/114]	lr: 1.626e-02, eta: 0:07:04, time: 1.818, data_time: 0.075, memory: 41054, loss_rpn_cls0_w0.5: 0.0152, loss_rpn_bbox0_w0.5: 0.0190, loss_rpn_cls1: 0.0257, loss_rpn_bbox1: 0.0340, s0.loss_cls0_w0.5: 0.1155, s0.acc0: 44.9455, s0.loss_bbox0_w0.5: 0.2332, s0.loss_mask0_w0.5: 0.1488, s1.loss_cls0_w0.5: 0.0586, s1.acc0: 44.7470, s1.loss_bbox0_w0.5: 0.1085, s1.loss_mask0_w0.5: 0.0728, s2.loss_cls0_w0.5: 0.0303, s2.acc0: 44.3127, s2.loss_bbox0_w0.5: 0.0375, s2.loss_mask0_w0.5: 0.0346, s0.loss_cls1: 0.2182, s0.acc1: 90.2946, s0.loss_bbox1: 0.4440, s0.loss_mask1: 0.2907, s1.loss_cls1: 0.1128, s1.acc1: 89.8172, s1.loss_bbox1: 0.2129, s1.loss_mask1: 0.1426, s2.loss_cls1: 0.0588, s2.acc1: 88.9328, s2.loss_bbox1: 0.0738, s2.loss_mask1: 0.0676, loss: 2.5552, grad_norm: 2.5261
2023-07-10 19:49:54,721 - mmdet - INFO - Epoch [8][100/114]	lr: 1.608e-02, eta: 0:06:32, time: 1.794, data_time: 0.063, memory: 41054, loss_rpn_cls0_w0.5: 0.0137, loss_rpn_bbox0_w0.5: 0.0182, loss_rpn_cls1: 0.0229, loss_rpn_bbox1: 0.0325, s0.loss_cls0_w0.5: 0.1171, s0.acc0: 44.9113, s0.loss_bbox0_w0.5: 0.2445, s0.loss_mask0_w0.5: 0.1492, s1.loss_cls0_w0.5: 0.0600, s1.acc0: 44.6898, s1.loss_bbox0_w0.5: 0.1134, s1.loss_mask0_w0.5: 0.0727, s2.loss_cls0_w0.5: 0.0311, s2.acc0: 44.4198, s2.loss_bbox0_w0.5: 0.0381, s2.loss_mask0_w0.5: 0.0345, s0.loss_cls1: 0.2230, s0.acc1: 90.3125, s0.loss_bbox1: 0.4719, s0.loss_mask1: 0.2911, s1.loss_cls1: 0.1161, s1.acc1: 89.8615, s1.loss_bbox1: 0.2249, s1.loss_mask1: 0.1430, s2.loss_cls1: 0.0601, s2.acc1: 88.7514, s2.loss_bbox1: 0.0765, s2.loss_mask1: 0.0678, loss: 2.6224, grad_norm: 2.4697
2023-07-10 19:50:41,688 - mmdet - INFO - Evaluating segm...
2023-07-10 19:50:42,694 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.211
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.517
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.144
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.146
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.298
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.456
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.386
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.483
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.547

2023-07-10 19:50:42,703 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:50:42,703 - mmdet - INFO - Epoch(val) [8][29]	segm_mAP: 0.2111, segm_mAP_50: 0.5170, segm_mAP_75: 0.1436, segm_mAP_s: 0.1462, segm_mAP_m: 0.2983, segm_mAP_l: 0.4558, segm_mAP_copypaste: 0.2111 0.5170 0.1436 0.1462 0.2983 0.4558
2023-07-10 19:51:21,461 - mmdet - INFO - Epoch [9][20/114]	lr: 1.581e-02, eta: 0:05:33, time: 1.937, data_time: 0.209, memory: 41054, loss_rpn_cls0_w0.5: 0.0151, loss_rpn_bbox0_w0.5: 0.0186, loss_rpn_cls1: 0.0244, loss_rpn_bbox1: 0.0331, s0.loss_cls0_w0.5: 0.1234, s0.acc0: 44.5817, s0.loss_bbox0_w0.5: 0.2478, s0.loss_mask0_w0.5: 0.1476, s1.loss_cls0_w0.5: 0.0613, s1.acc0: 44.4405, s1.loss_bbox0_w0.5: 0.1140, s1.loss_mask0_w0.5: 0.0722, s2.loss_cls0_w0.5: 0.0314, s2.acc0: 44.1135, s2.loss_bbox0_w0.5: 0.0385, s2.loss_mask0_w0.5: 0.0343, s0.loss_cls1: 0.2342, s0.acc1: 89.8096, s0.loss_bbox1: 0.4754, s0.loss_mask1: 0.2887, s1.loss_cls1: 0.1179, s1.acc1: 89.6366, s1.loss_bbox1: 0.2239, s1.loss_mask1: 0.1410, s2.loss_cls1: 0.0617, s2.acc1: 88.3809, s2.loss_bbox1: 0.0775, s2.loss_mask1: 0.0674, loss: 2.6493, grad_norm: 2.6951
2023-07-10 19:51:57,479 - mmdet - INFO - Epoch [9][40/114]	lr: 1.566e-02, eta: 0:05:02, time: 1.801, data_time: 0.048, memory: 41054, loss_rpn_cls0_w0.5: 0.0161, loss_rpn_bbox0_w0.5: 0.0171, loss_rpn_cls1: 0.0260, loss_rpn_bbox1: 0.0315, s0.loss_cls0_w0.5: 0.1205, s0.acc0: 44.8299, s0.loss_bbox0_w0.5: 0.2473, s0.loss_mask0_w0.5: 0.1476, s1.loss_cls0_w0.5: 0.0614, s1.acc0: 44.7611, s1.loss_bbox0_w0.5: 0.1145, s1.loss_mask0_w0.5: 0.0719, s2.loss_cls0_w0.5: 0.0316, s2.acc0: 44.2492, s2.loss_bbox0_w0.5: 0.0397, s2.loss_mask0_w0.5: 0.0344, s0.loss_cls1: 0.2316, s0.acc1: 90.0423, s0.loss_bbox1: 0.4777, s0.loss_mask1: 0.2874, s1.loss_cls1: 0.1176, s1.acc1: 89.7658, s1.loss_bbox1: 0.2238, s1.loss_mask1: 0.1409, s2.loss_cls1: 0.0614, s2.acc1: 88.7386, s2.loss_bbox1: 0.0792, s2.loss_mask1: 0.0674, loss: 2.6465, grad_norm: 2.5716
2023-07-10 19:52:33,134 - mmdet - INFO - Epoch [9][60/114]	lr: 1.553e-02, eta: 0:04:31, time: 1.783, data_time: 0.046, memory: 41054, loss_rpn_cls0_w0.5: 0.0159, loss_rpn_bbox0_w0.5: 0.0171, loss_rpn_cls1: 0.0253, loss_rpn_bbox1: 0.0305, s0.loss_cls0_w0.5: 0.1080, s0.acc0: 45.2271, s0.loss_bbox0_w0.5: 0.2377, s0.loss_mask0_w0.5: 0.1464, s1.loss_cls0_w0.5: 0.0543, s1.acc0: 45.1531, s1.loss_bbox0_w0.5: 0.1083, s1.loss_mask0_w0.5: 0.0708, s2.loss_cls0_w0.5: 0.0283, s2.acc0: 44.5347, s2.loss_bbox0_w0.5: 0.0360, s2.loss_mask0_w0.5: 0.0337, s0.loss_cls1: 0.2039, s0.acc1: 91.1914, s0.loss_bbox1: 0.4547, s0.loss_mask1: 0.2863, s1.loss_cls1: 0.1044, s1.acc1: 90.9362, s1.loss_bbox1: 0.2093, s1.loss_mask1: 0.1390, s2.loss_cls1: 0.0552, s2.acc1: 89.4543, s2.loss_bbox1: 0.0709, s2.loss_mask1: 0.0658, loss: 2.5019, grad_norm: 2.6199
2023-07-10 19:53:09,331 - mmdet - INFO - Epoch [9][80/114]	lr: 1.542e-02, eta: 0:03:59, time: 1.810, data_time: 0.068, memory: 41054, loss_rpn_cls0_w0.5: 0.0145, loss_rpn_bbox0_w0.5: 0.0164, loss_rpn_cls1: 0.0224, loss_rpn_bbox1: 0.0305, s0.loss_cls0_w0.5: 0.1155, s0.acc0: 44.9797, s0.loss_bbox0_w0.5: 0.2340, s0.loss_mask0_w0.5: 0.1530, s1.loss_cls0_w0.5: 0.0587, s1.acc0: 44.8041, s1.loss_bbox0_w0.5: 0.1098, s1.loss_mask0_w0.5: 0.0734, s2.loss_cls0_w0.5: 0.0303, s2.acc0: 44.4877, s2.loss_bbox0_w0.5: 0.0375, s2.loss_mask0_w0.5: 0.0345, s0.loss_cls1: 0.2171, s0.acc1: 90.5615, s0.loss_bbox1: 0.4498, s0.loss_mask1: 0.2941, s1.loss_cls1: 0.1115, s1.acc1: 90.2736, s1.loss_bbox1: 0.2147, s1.loss_mask1: 0.1434, s2.loss_cls1: 0.0582, s2.acc1: 89.1270, s2.loss_bbox1: 0.0741, s2.loss_mask1: 0.0673, loss: 2.5609, grad_norm: 2.5049
2023-07-10 19:53:45,583 - mmdet - INFO - Epoch [9][100/114]	lr: 1.531e-02, eta: 0:03:27, time: 1.813, data_time: 0.056, memory: 41054, loss_rpn_cls0_w0.5: 0.0147, loss_rpn_bbox0_w0.5: 0.0182, loss_rpn_cls1: 0.0234, loss_rpn_bbox1: 0.0328, s0.loss_cls0_w0.5: 0.1224, s0.acc0: 44.6509, s0.loss_bbox0_w0.5: 0.2531, s0.loss_mask0_w0.5: 0.1494, s1.loss_cls0_w0.5: 0.0624, s1.acc0: 44.5568, s1.loss_bbox0_w0.5: 0.1184, s1.loss_mask0_w0.5: 0.0724, s2.loss_cls0_w0.5: 0.0320, s2.acc0: 44.3615, s2.loss_bbox0_w0.5: 0.0415, s2.loss_mask0_w0.5: 0.0344, s0.loss_cls1: 0.2297, s0.acc1: 90.0423, s0.loss_bbox1: 0.4865, s0.loss_mask1: 0.2934, s1.loss_cls1: 0.1190, s1.acc1: 89.6442, s1.loss_bbox1: 0.2309, s1.loss_mask1: 0.1430, s2.loss_cls1: 0.0619, s2.acc1: 88.4199, s2.loss_bbox1: 0.0829, s2.loss_mask1: 0.0680, loss: 2.6902, grad_norm: 2.5455
2023-07-10 19:54:32,598 - mmdet - INFO - Evaluating segm...
2023-07-10 19:54:33,604 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.194
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.497
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.119
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.118
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.296
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.499
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.422
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.422
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.422
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.356
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.500
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.606

2023-07-10 19:54:33,612 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:54:33,612 - mmdet - INFO - Epoch(val) [9][29]	segm_mAP: 0.1938, segm_mAP_50: 0.4966, segm_mAP_75: 0.1185, segm_mAP_s: 0.1176, segm_mAP_m: 0.2962, segm_mAP_l: 0.4988, segm_mAP_copypaste: 0.1938 0.4966 0.1185 0.1176 0.2962 0.4988
2023-07-10 19:55:12,556 - mmdet - INFO - Epoch [10][20/114]	lr: 1.517e-02, eta: 0:02:30, time: 1.947, data_time: 0.198, memory: 41054, loss_rpn_cls0_w0.5: 0.0151, loss_rpn_bbox0_w0.5: 0.0174, loss_rpn_cls1: 0.0226, loss_rpn_bbox1: 0.0310, s0.loss_cls0_w0.5: 0.1206, s0.acc0: 44.7909, s0.loss_bbox0_w0.5: 0.2469, s0.loss_mask0_w0.5: 0.1482, s1.loss_cls0_w0.5: 0.0621, s1.acc0: 44.5900, s1.loss_bbox0_w0.5: 0.1148, s1.loss_mask0_w0.5: 0.0729, s2.loss_cls0_w0.5: 0.0315, s2.acc0: 44.1606, s2.loss_bbox0_w0.5: 0.0390, s2.loss_mask0_w0.5: 0.0346, s0.loss_cls1: 0.2264, s0.acc1: 90.3320, s0.loss_bbox1: 0.4687, s0.loss_mask1: 0.2879, s1.loss_cls1: 0.1189, s1.acc1: 89.9298, s1.loss_bbox1: 0.2219, s1.loss_mask1: 0.1424, s2.loss_cls1: 0.0619, s2.acc1: 88.5968, s2.loss_bbox1: 0.0781, s2.loss_mask1: 0.0677, loss: 2.6305, grad_norm: 2.6826
2023-07-10 19:55:48,687 - mmdet - INFO - Epoch [10][40/114]	lr: 1.511e-02, eta: 0:01:59, time: 1.807, data_time: 0.047, memory: 41054, loss_rpn_cls0_w0.5: 0.0161, loss_rpn_bbox0_w0.5: 0.0215, loss_rpn_cls1: 0.0270, loss_rpn_bbox1: 0.0386, s0.loss_cls0_w0.5: 0.1212, s0.acc0: 44.6989, s0.loss_bbox0_w0.5: 0.2586, s0.loss_mask0_w0.5: 0.1495, s1.loss_cls0_w0.5: 0.0612, s1.acc0: 44.6556, s1.loss_bbox0_w0.5: 0.1178, s1.loss_mask0_w0.5: 0.0728, s2.loss_cls0_w0.5: 0.0317, s2.acc0: 44.0431, s2.loss_bbox0_w0.5: 0.0380, s2.loss_mask0_w0.5: 0.0345, s0.loss_cls1: 0.2312, s0.acc1: 90.0228, s0.loss_bbox1: 0.5031, s0.loss_mask1: 0.2912, s1.loss_cls1: 0.1180, s1.acc1: 89.6658, s1.loss_bbox1: 0.2321, s1.loss_mask1: 0.1430, s2.loss_cls1: 0.0622, s2.acc1: 88.5487, s2.loss_bbox1: 0.0759, s2.loss_mask1: 0.0677, loss: 2.7129, grad_norm: 2.6265
2023-07-10 19:56:24,258 - mmdet - INFO - Epoch [10][60/114]	lr: 1.506e-02, eta: 0:01:27, time: 1.779, data_time: 0.047, memory: 41054, loss_rpn_cls0_w0.5: 0.0139, loss_rpn_bbox0_w0.5: 0.0158, loss_rpn_cls1: 0.0231, loss_rpn_bbox1: 0.0285, s0.loss_cls0_w0.5: 0.1124, s0.acc0: 44.9805, s0.loss_bbox0_w0.5: 0.2371, s0.loss_mask0_w0.5: 0.1453, s1.loss_cls0_w0.5: 0.0573, s1.acc0: 44.8377, s1.loss_bbox0_w0.5: 0.1095, s1.loss_mask0_w0.5: 0.0709, s2.loss_cls0_w0.5: 0.0300, s2.acc0: 44.2650, s2.loss_bbox0_w0.5: 0.0379, s2.loss_mask0_w0.5: 0.0339, s0.loss_cls1: 0.2110, s0.acc1: 90.8040, s0.loss_bbox1: 0.4584, s0.loss_mask1: 0.2852, s1.loss_cls1: 0.1091, s1.acc1: 90.2845, s1.loss_bbox1: 0.2144, s1.loss_mask1: 0.1401, s2.loss_cls1: 0.0578, s2.acc1: 89.1250, s2.loss_bbox1: 0.0740, s2.loss_mask1: 0.0665, loss: 2.5324, grad_norm: 2.8524
2023-07-10 19:57:00,362 - mmdet - INFO - Epoch [10][80/114]	lr: 1.502e-02, eta: 0:00:54, time: 1.805, data_time: 0.053, memory: 41054, loss_rpn_cls0_w0.5: 0.0135, loss_rpn_bbox0_w0.5: 0.0162, loss_rpn_cls1: 0.0199, loss_rpn_bbox1: 0.0286, s0.loss_cls0_w0.5: 0.1129, s0.acc0: 45.0594, s0.loss_bbox0_w0.5: 0.2368, s0.loss_mask0_w0.5: 0.1477, s1.loss_cls0_w0.5: 0.0575, s1.acc0: 44.9591, s1.loss_bbox0_w0.5: 0.1126, s1.loss_mask0_w0.5: 0.0723, s2.loss_cls0_w0.5: 0.0306, s2.acc0: 44.1190, s2.loss_bbox0_w0.5: 0.0389, s2.loss_mask0_w0.5: 0.0345, s0.loss_cls1: 0.2099, s0.acc1: 90.7096, s0.loss_bbox1: 0.4582, s0.loss_mask1: 0.2901, s1.loss_cls1: 0.1085, s1.acc1: 90.4234, s1.loss_bbox1: 0.2225, s1.loss_mask1: 0.1426, s2.loss_cls1: 0.0578, s2.acc1: 89.4934, s2.loss_bbox1: 0.0776, s2.loss_mask1: 0.0681, loss: 2.5574, grad_norm: 2.7276
2023-07-10 19:57:36,488 - mmdet - INFO - Epoch [10][100/114]	lr: 1.500e-02, eta: 0:00:22, time: 1.806, data_time: 0.044, memory: 41054, loss_rpn_cls0_w0.5: 0.0143, loss_rpn_bbox0_w0.5: 0.0181, loss_rpn_cls1: 0.0228, loss_rpn_bbox1: 0.0324, s0.loss_cls0_w0.5: 0.1175, s0.acc0: 44.8779, s0.loss_bbox0_w0.5: 0.2475, s0.loss_mask0_w0.5: 0.1459, s1.loss_cls0_w0.5: 0.0594, s1.acc0: 44.7507, s1.loss_bbox0_w0.5: 0.1148, s1.loss_mask0_w0.5: 0.0711, s2.loss_cls0_w0.5: 0.0310, s2.acc0: 44.2524, s2.loss_bbox0_w0.5: 0.0390, s2.loss_mask0_w0.5: 0.0336, s0.loss_cls1: 0.2239, s0.acc1: 90.3109, s0.loss_bbox1: 0.4816, s0.loss_mask1: 0.2843, s1.loss_cls1: 0.1151, s1.acc1: 89.8716, s1.loss_bbox1: 0.2256, s1.loss_mask1: 0.1391, s2.loss_cls1: 0.0608, s2.acc1: 88.7486, s2.loss_bbox1: 0.0770, s2.loss_mask1: 0.0662, loss: 2.6209, grad_norm: 2.9809
2023-07-10 19:58:01,943 - mmdet - INFO - Saving checkpoint at 10 epochs
2023-07-10 19:58:25,810 - mmdet - INFO - Evaluating segm...
2023-07-10 19:58:26,816 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.199
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.491
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.136
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.137
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.291
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.399
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.427
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.427
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.427
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.387
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.476
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.500

2023-07-10 19:58:26,824 - mmdet - INFO - Exp name: exp1_pret.py
2023-07-10 19:58:26,824 - mmdet - INFO - Epoch(val) [10][29]	segm_mAP: 0.1990, segm_mAP_50: 0.4909, segm_mAP_75: 0.1361, segm_mAP_s: 0.1365, segm_mAP_m: 0.2908, segm_mAP_l: 0.3988, segm_mAP_copypaste: 0.1990 0.4909 0.1361 0.1365 0.2908 0.3988
